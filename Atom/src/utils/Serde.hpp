/*
* Copyright (C) 2021 DigiPen Institute of Technology.
* Reproduction or disclosure of this file or its contents without the
* prior written consent of DigiPen Institute of Technology is prohibited.
* 
* @file		Serde.hpp
* @author	Abhikalp Unakal
* @brief	Class with helpers for all (Se)rialization and (De)serialization
* @date		2021-01-16
*/

#ifndef SERDE_HPP
#define SERDE_HPP

#include <Pch.hpp>
#include "core/Types.hpp"
#include "utils/AtomKeycode.hpp"

#define REGISTER_STRING(x) {x,#x},

// read file and write into json
inline void load(string filepath, ordered_json& j) {
	std::ifstream in(filepath);
	in >> j;
}

// read json and write to file
inline void save(string filepath, const ordered_json& j) {
	std::ofstream out(filepath);
	out << std::setw(4) << j;
}

//// SERDE FOR ENUMS
NLOHMANN_JSON_SERIALIZE_ENUM(ShapeType, {
	REGISTER_STRING(AABB)
	REGISTER_STRING(NUM)
	});

NLOHMANN_JSON_SERIALIZE_ENUM(SkillType, {
	REGISTER_STRING(DoubleJump)
	REGISTER_STRING(WallJump)
	REGISTER_STRING(BulletCount)
	REGISTER_STRING(BulletSpeed)
	REGISTER_STRING(Trigger)
	REGISTER_STRING(FullHealth)
	REGISTER_STRING(DoubleHealth)
	});

// EVENTID
NLOHMANN_JSON_SERIALIZE_ENUM(EventID, {
	// WINDOW
	REGISTER_STRING(E_WINDOW_QUIT)
	REGISTER_STRING(E_WINDOW_RESIZED)
		REGISTER_STRING(P_WINDOW_RESIZED_WIDTH)
		REGISTER_STRING(P_WINDOW_RESIZED_HEIGHT)
	// KEYBOARD
	REGISTER_STRING(E_WINDOW_KEY_PRESSED)
		REGISTER_STRING(P_WINDOW_KEY_PRESSED_KEYCODE)
	REGISTER_STRING(E_WINDOW_KEY_RELEASED)
		REGISTER_STRING(P_WINDOW_KEY_RELEASED_KEYCODE)
	REGISTER_STRING(E_WINDOW_KEY_TRIGGERED)
		REGISTER_STRING(P_WINDOW_KEY_TRIGGERED_KEYCODE)
	// MOUSE
	REGISTER_STRING(E_WINDOW_MOUSE_MOVE)
		REGISTER_STRING(P_WINDOW_MOUSE_MOVE_X)
		REGISTER_STRING(P_WINDOW_MOUSE_MOVE_Y)
	REGISTER_STRING(E_WINDOW_MOUSE_DOWN)
		REGISTER_STRING(P_WINDOW_MOUSE_DOWN_BUTTON)
		REGISTER_STRING(P_WINDOW_MOUSE_DOWN_X)
		REGISTER_STRING(P_WINDOW_MOUSE_DOWN_Y)
	REGISTER_STRING(E_WINDOW_MOUSE_UP)
		REGISTER_STRING(P_WINDOW_MOUSE_UP_BUTTON)
		REGISTER_STRING(P_WINDOW_MOUSE_UP_X)
		REGISTER_STRING(P_WINDOW_MOUSE_UP_Y)
	// GRAPHICS
	REGISTER_STRING(E_GRAPHICS_DEBUG_TOGGLE)
	// CAMERA
	REGISTER_STRING(E_GRAPHICS_CAMERA_UPDATED)
		REGISTER_STRING(P_GRAPHICS_CAMERA_UPDATED_ENTITYID)
	// BROADCAST EVENT
	REGISTER_STRING(E_BROADCAST_EVENT)
		REGISTER_STRING(P_BROADCAST_EVENT_DATA)
	// TIMED EVENTS
	REGISTER_STRING(E_TIMED_EVENT)
		REGISTER_STRING(P_TIMED_EVENT_TIME_START)
		REGISTER_STRING(P_TIMED_EVENT_TIME_EXEC)
		REGISTER_STRING(P_TIMED_EVENT_DATA)
	// DIRECTMESSAGE EVENTS
	REGISTER_STRING(E_DM_EVENT)
		REGISTER_STRING(P_DM_EVENT_ENTITYID)
		REGISTER_STRING(P_DM_EVENT_DATA)
	// GAMESTATE EVENTS
	REGISTER_STRING(E_GS_LEVEL)
		REGISTER_STRING(P_GS_LEVEL_NAME)
	// FIRE BULLET
	REGISTER_STRING(E_BULLET_FIRED)
		REGISTER_STRING(P_BULLET_FIRED_ORIGIN_ID)
	// AUDIO EVENTS
	REGISTER_STRING(E_AUDIO_PLAY),
		REGISTER_STRING(P_AUDIO_PLAY_AUDIOLOC),
		REGISTER_STRING(P_AUDIO_PLAY_CHANNELGROUP),
		REGISTER_STRING(P_AUDIO_PLAY_VOLUMEDB),
	// COLLISION EVENTS
	REGISTER_STRING(E_COLLISION),
		REGISTER_STRING(P_COLLISION_ENTITYID1),
		REGISTER_STRING(P_COLLISION_ENTITYID2),
	// ANIMATION EVENTS
	REGISTER_STRING(E_ANIMATION),
		REGISTER_STRING(P_ANIMATION_STATE),
	REGISTER_STRING(EP_TOTAL)
	});


//// SERDE (SERIALIZER DESERIALIZER) FOR BASIC TYPES

////////////////////////////////// INT
inline void to_json(ordered_json& j, const int& x) {
	j = x;
}

inline void from_json(const ordered_json& j, int& x) {
	x = j.get<int>();
}
/////////////////////////////////

///////////////////////////////// UNSIGNED INT
inline void to_json(ordered_json& j, const unsigned int& x) {
	j = x;
}

inline void from_json(const ordered_json& j, unsigned int& x) {
	x = j.get<unsigned int>();
}
/////////////////////////////////

///////////////////////////////// FLOAT
inline void to_json(ordered_json& j, const float& x) {
	j = x;
}

inline void from_json(const ordered_json& j, float& x) {
	x = j.get<float>();
}
/////////////////////////////////

///////////////////////////////// STRING
inline void to_json(ordered_json& j, const string& x) {
	j = x.c_str();
}

inline void from_json(const ordered_json& j, string& x) {
	x = j.get<string>();
}
/////////////////////////////////

///////////////////////////////// BOOL
inline void to_json(ordered_json& j, const bool& x) {
	j = x;
}

inline void from_json(const ordered_json& j, bool& x) {
	x = j.get<bool>();
}
/////////////////////////////////

///////////////////////////////// VEC2
inline void to_json(ordered_json& j, const glm::vec2& x) {
	j = {
		{"x",x.x},
		{"y",x.y},
	};
}

inline void from_json(const ordered_json& j, glm::vec2& x) {
	j.at("x").get_to(x.x);
	j.at("y").get_to(x.y);
}

///////////////////////////////// VEC3
inline void to_json(ordered_json& j, const glm::vec3& x) {
	j = {
		{"x",x.x},
		{"y",x.y},
		{"z",x.z},
	};
}

inline void from_json(const ordered_json& j, glm::vec3& x) {
	j.at("x").get_to(x.x);
	j.at("y").get_to(x.y);
	j.at("z").get_to(x.z);
}

///////////////////////////////// VEC4
inline void to_json(ordered_json& j, const glm::vec4& x) {
	j = {
		{"x",x.x},
		{"y",x.y},
		{"z",x.z},
		{"w",x.w},
	};
}

inline void from_json(const ordered_json& j, glm::vec4& x) {
	j.at("x").get_to(x.x);
	j.at("y").get_to(x.y);
	j.at("z").get_to(x.z);
	j.at("w").get_to(x.w);
}

///////////////////////////////// MAT4
inline void to_json(ordered_json& j, const glm::mat4& x) {
	j = {
		{x[0][0],x[1][0],x[2][0],x[3][0]},
		{x[0][1],x[1][1],x[2][1],x[3][1]},
		{x[0][2],x[1][2],x[2][2],x[3][2]},
		{x[0][3],x[1][3],x[2][3],x[3][3]}
	};
}

inline void from_json(const ordered_json& j, glm::mat4& x) {
	for (int k = 0; k < 4; ++k) {
		for (int l = 0; l < 4; ++l) {
			j.at(k).at(l).get_to(x[k][l]);
		}
	}
}

// ATOMKEYCODES
NLOHMANN_JSON_SERIALIZE_ENUM(AtomKeycode, {
	REGISTER_STRING(ATOM_KEYCODE_LBUTTON)
	REGISTER_STRING(ATOM_KEYCODE_RBUTTON)
	REGISTER_STRING(ATOM_KEYCODE_CANCEL)
	REGISTER_STRING(ATOM_KEYCODE_MBUTTON)
	REGISTER_STRING(ATOM_KEYCODE_XBUTTON1)
	REGISTER_STRING(ATOM_KEYCODE_XBUTTON2)
	REGISTER_STRING(ATOM_KEYCODE_UNDEFINED_0X07)
	REGISTER_STRING(ATOM_KEYCODE_BACK)
	REGISTER_STRING(ATOM_KEYCODE_TAB)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0X0A)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0X0B)
	REGISTER_STRING(ATOM_KEYCODE_CLEAR)
	REGISTER_STRING(ATOM_KEYCODE_RETURN)
	REGISTER_STRING(ATOM_KEYCODE_UNDEFINED_0X0E)
	REGISTER_STRING(ATOM_KEYCODE_UNDEFINED_0X0F)
	REGISTER_STRING(ATOM_KEYCODE_SHIFT)
	REGISTER_STRING(ATOM_KEYCODE_CONTROL)
	REGISTER_STRING(ATOM_KEYCODE_MENU)
	REGISTER_STRING(ATOM_KEYCODE_PAUSE)
	REGISTER_STRING(ATOM_KEYCODE_CAPITAL)
	REGISTER_STRING(ATOM_KEYCODE_KANA)
	REGISTER_STRING(ATOM_KEYCODE_HANGUEL)
	REGISTER_STRING(ATOM_KEYCODE_HANGUL)
	REGISTER_STRING(ATOM_KEYCODE_IME_ON)
	REGISTER_STRING(ATOM_KEYCODE_JUNJA)
	REGISTER_STRING(ATOM_KEYCODE_FINAL)
	REGISTER_STRING(ATOM_KEYCODE_HANJA)
	REGISTER_STRING(ATOM_KEYCODE_KANJI)
	REGISTER_STRING(ATOM_KEYCODE_IME_OFF)
	REGISTER_STRING(ATOM_KEYCODE_ESCAPE)
	REGISTER_STRING(ATOM_KEYCODE_CONVERT)
	REGISTER_STRING(ATOM_KEYCODE_NONCONVERT)
	REGISTER_STRING(ATOM_KEYCODE_ACCEPT)
	REGISTER_STRING(ATOM_KEYCODE_MODECHANGE)
	REGISTER_STRING(ATOM_KEYCODE_SPACE)
	REGISTER_STRING(ATOM_KEYCODE_PRIOR)
	REGISTER_STRING(ATOM_KEYCODE_NEXT)
	REGISTER_STRING(ATOM_KEYCODE_END)
	REGISTER_STRING(ATOM_KEYCODE_HOME)
	REGISTER_STRING(ATOM_KEYCODE_LEFT)
	REGISTER_STRING(ATOM_KEYCODE_UP)
	REGISTER_STRING(ATOM_KEYCODE_RIGHT)
	REGISTER_STRING(ATOM_KEYCODE_DOWN)
	REGISTER_STRING(ATOM_KEYCODE_SELECT)
	REGISTER_STRING(ATOM_KEYCODE_PRINT)
	REGISTER_STRING(ATOM_KEYCODE_EXECUTE)
	REGISTER_STRING(ATOM_KEYCODE_SNAPSHOT)
	REGISTER_STRING(ATOM_KEYCODE_INSERT)
	REGISTER_STRING(ATOM_KEYCODE_DELETE)
	REGISTER_STRING(ATOM_KEYCODE_HELP)
	REGISTER_STRING(ATOM_KEYCODE_0)
	REGISTER_STRING(ATOM_KEYCODE_1)
	REGISTER_STRING(ATOM_KEYCODE_2)
	REGISTER_STRING(ATOM_KEYCODE_3)
	REGISTER_STRING(ATOM_KEYCODE_4)
	REGISTER_STRING(ATOM_KEYCODE_5)
	REGISTER_STRING(ATOM_KEYCODE_6)
	REGISTER_STRING(ATOM_KEYCODE_7)
	REGISTER_STRING(ATOM_KEYCODE_8)
	REGISTER_STRING(ATOM_KEYCODE_9)
	REGISTER_STRING(ATOM_KEYCODE_UNDEFINED_0X3A)
	REGISTER_STRING(ATOM_KEYCODE_UNDEFINED_0X3B)
	REGISTER_STRING(ATOM_KEYCODE_UNDEFINED_0X3C)
	REGISTER_STRING(ATOM_KEYCODE_UNDEFINED_0X3D)
	REGISTER_STRING(ATOM_KEYCODE_UNDEFINED_0X3E)
	REGISTER_STRING(ATOM_KEYCODE_UNDEFINED_0X3F)
	REGISTER_STRING(ATOM_KEYCODE_UNDEFINED_0X40)
	REGISTER_STRING(ATOM_KEYCODE_A)
	REGISTER_STRING(ATOM_KEYCODE_B)
	REGISTER_STRING(ATOM_KEYCODE_C)
	REGISTER_STRING(ATOM_KEYCODE_D)
	REGISTER_STRING(ATOM_KEYCODE_E)
	REGISTER_STRING(ATOM_KEYCODE_F)
	REGISTER_STRING(ATOM_KEYCODE_G)
	REGISTER_STRING(ATOM_KEYCODE_H)
	REGISTER_STRING(ATOM_KEYCODE_I)
	REGISTER_STRING(ATOM_KEYCODE_J)
	REGISTER_STRING(ATOM_KEYCODE_K)
	REGISTER_STRING(ATOM_KEYCODE_L)
	REGISTER_STRING(ATOM_KEYCODE_M)
	REGISTER_STRING(ATOM_KEYCODE_N)
	REGISTER_STRING(ATOM_KEYCODE_O)
	REGISTER_STRING(ATOM_KEYCODE_P)
	REGISTER_STRING(ATOM_KEYCODE_Q)
	REGISTER_STRING(ATOM_KEYCODE_R)
	REGISTER_STRING(ATOM_KEYCODE_S)
	REGISTER_STRING(ATOM_KEYCODE_T)
	REGISTER_STRING(ATOM_KEYCODE_U)
	REGISTER_STRING(ATOM_KEYCODE_V)
	REGISTER_STRING(ATOM_KEYCODE_W)
	REGISTER_STRING(ATOM_KEYCODE_X)
	REGISTER_STRING(ATOM_KEYCODE_Y)
	REGISTER_STRING(ATOM_KEYCODE_Z)
	REGISTER_STRING(ATOM_KEYCODE_LWIN)
	REGISTER_STRING(ATOM_KEYCODE_RWIN)
	REGISTER_STRING(ATOM_KEYCODE_APPS)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0X5E)
	REGISTER_STRING(ATOM_KEYCODE_SLEEP)
	REGISTER_STRING(ATOM_KEYCODE_NUMPAD0)
	REGISTER_STRING(ATOM_KEYCODE_NUMPAD1)
	REGISTER_STRING(ATOM_KEYCODE_NUMPAD2)
	REGISTER_STRING(ATOM_KEYCODE_NUMPAD3)
	REGISTER_STRING(ATOM_KEYCODE_NUMPAD4)
	REGISTER_STRING(ATOM_KEYCODE_NUMPAD5)
	REGISTER_STRING(ATOM_KEYCODE_NUMPAD6)
	REGISTER_STRING(ATOM_KEYCODE_NUMPAD7)
	REGISTER_STRING(ATOM_KEYCODE_NUMPAD8)
	REGISTER_STRING(ATOM_KEYCODE_NUMPAD9)
	REGISTER_STRING(ATOM_KEYCODE_MULTIPLY)
	REGISTER_STRING(ATOM_KEYCODE_ADD)
	REGISTER_STRING(ATOM_KEYCODE_SEPARATOR)
	REGISTER_STRING(ATOM_KEYCODE_SUBTRACT)
	REGISTER_STRING(ATOM_KEYCODE_DECIMAL)
	REGISTER_STRING(ATOM_KEYCODE_DIVIDE)
	REGISTER_STRING(ATOM_KEYCODE_F1)
	REGISTER_STRING(ATOM_KEYCODE_F2)
	REGISTER_STRING(ATOM_KEYCODE_F3)
	REGISTER_STRING(ATOM_KEYCODE_F4)
	REGISTER_STRING(ATOM_KEYCODE_F5)
	REGISTER_STRING(ATOM_KEYCODE_F6)
	REGISTER_STRING(ATOM_KEYCODE_F7)
	REGISTER_STRING(ATOM_KEYCODE_F8)
	REGISTER_STRING(ATOM_KEYCODE_F9)
	REGISTER_STRING(ATOM_KEYCODE_F10)
	REGISTER_STRING(ATOM_KEYCODE_F11)
	REGISTER_STRING(ATOM_KEYCODE_F12)
	REGISTER_STRING(ATOM_KEYCODE_F13)
	REGISTER_STRING(ATOM_KEYCODE_F14)
	REGISTER_STRING(ATOM_KEYCODE_F15)
	REGISTER_STRING(ATOM_KEYCODE_F16)
	REGISTER_STRING(ATOM_KEYCODE_F17)
	REGISTER_STRING(ATOM_KEYCODE_F18)
	REGISTER_STRING(ATOM_KEYCODE_F19)
	REGISTER_STRING(ATOM_KEYCODE_F20)
	REGISTER_STRING(ATOM_KEYCODE_F21)
	REGISTER_STRING(ATOM_KEYCODE_F22)
	REGISTER_STRING(ATOM_KEYCODE_F23)
	REGISTER_STRING(ATOM_KEYCODE_F24)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X88)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X89)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X8A)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X8B)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X8C)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X8D)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X8E)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X8F)
	REGISTER_STRING(ATOM_KEYCODE_NUMLOCK)
	REGISTER_STRING(ATOM_KEYCODE_SCROLL)
	REGISTER_STRING(ATOM_KEYCODE_OEM_SPECIFIC_0X92)
	REGISTER_STRING(ATOM_KEYCODE_OEM_SPECIFIC_0X93)
	REGISTER_STRING(ATOM_KEYCODE_OEM_SPECIFIC_0X94)
	REGISTER_STRING(ATOM_KEYCODE_OEM_SPECIFIC_0X95)
	REGISTER_STRING(ATOM_KEYCODE_OEM_SPECIFIC_0X96)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X97)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X98)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X99)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X9A)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X9B)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X9C)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X9D)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X9E)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0X9F)
	REGISTER_STRING(ATOM_KEYCODE_LSHIFT)
	REGISTER_STRING(ATOM_KEYCODE_RSHIFT)
	REGISTER_STRING(ATOM_KEYCODE_LCONTROL)
	REGISTER_STRING(ATOM_KEYCODE_RCONTROL)
	REGISTER_STRING(ATOM_KEYCODE_LMENU)
	REGISTER_STRING(ATOM_KEYCODE_RMENU)
	REGISTER_STRING(ATOM_KEYCODE_BROWSER_BACK)
	REGISTER_STRING(ATOM_KEYCODE_BROWSER_FORWARD)
	REGISTER_STRING(ATOM_KEYCODE_BROWSER_REFRESH)
	REGISTER_STRING(ATOM_KEYCODE_BROWSER_STOP)
	REGISTER_STRING(ATOM_KEYCODE_BROWSER_SEARCH)
	REGISTER_STRING(ATOM_KEYCODE_BROWSER_FAVORITES)
	REGISTER_STRING(ATOM_KEYCODE_BROWSER_HOME)
	REGISTER_STRING(ATOM_KEYCODE_VOLUME_MUTE)
	REGISTER_STRING(ATOM_KEYCODE_VOLUME_DOWN)
	REGISTER_STRING(ATOM_KEYCODE_VOLUME_UP)
	REGISTER_STRING(ATOM_KEYCODE_MEDIA_NEXT_TRACK)
	REGISTER_STRING(ATOM_KEYCODE_MEDIA_PREV_TRACK)
	REGISTER_STRING(ATOM_KEYCODE_MEDIA_STOP)
	REGISTER_STRING(ATOM_KEYCODE_MEDIA_PLAY_PAUSE)
	REGISTER_STRING(ATOM_KEYCODE_LAUNCH_MAIL)
	REGISTER_STRING(ATOM_KEYCODE_LAUNCH_MEDIA_SELECT)
	REGISTER_STRING(ATOM_KEYCODE_LAUNCH_APP1)
	REGISTER_STRING(ATOM_KEYCODE_LAUNCH_APP2)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XB8)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XB9)
	REGISTER_STRING(ATOM_KEYCODE_OEM_1)
	REGISTER_STRING(ATOM_KEYCODE_OEM_PLUS)
	REGISTER_STRING(ATOM_KEYCODE_OEM_COMMA)
	REGISTER_STRING(ATOM_KEYCODE_OEM_MINUS)
	REGISTER_STRING(ATOM_KEYCODE_OEM_PERIOD)
	REGISTER_STRING(ATOM_KEYCODE_OEM_2)
	REGISTER_STRING(ATOM_KEYCODE_OEM_3)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XC1)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XC2)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XC3)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XC4)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XC5)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XC6)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XC7)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XC8)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XC9)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XCA)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XCB)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XCC)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XCD)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XCE)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XCF)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XD0)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XD1)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XD2)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XD3)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XD4)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XD5)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XD6)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XD7)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0XD8)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0XD9)
	REGISTER_STRING(ATOM_KEYCODE_UNASSIGNED_0XDA)
	REGISTER_STRING(ATOM_KEYCODE_OEM_4)
	REGISTER_STRING(ATOM_KEYCODE_OEM_5)
	REGISTER_STRING(ATOM_KEYCODE_OEM_6)
	REGISTER_STRING(ATOM_KEYCODE_OEM_7)
	REGISTER_STRING(ATOM_KEYCODE_OEM_8)
	REGISTER_STRING(ATOM_KEYCODE_RESERVED_0XE0)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XE1)
	REGISTER_STRING(ATOM_KEYCODE_OEM_102)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XE3)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XE4)
	REGISTER_STRING(ATOM_KEYCODE_PROCESSKEY)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XE6)
	REGISTER_STRING(ATOM_KEYCODE_PACKET)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XE8)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XE9)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XEA)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XEB)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XEC)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XED)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XEE)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XEF)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XF0)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XF1)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XF2)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XF3)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XF4)
	REGISTER_STRING(ATOM_KEYCODE_OEM_0XF5)
	REGISTER_STRING(ATOM_KEYCODE_ATTN)
	REGISTER_STRING(ATOM_KEYCODE_CRSEL)
	REGISTER_STRING(ATOM_KEYCODE_EXSEL)
	REGISTER_STRING(ATOM_KEYCODE_EREOF)
	REGISTER_STRING(ATOM_KEYCODE_PLAY)
	REGISTER_STRING(ATOM_KEYCODE_ZOOM)
	REGISTER_STRING(ATOM_KEYCODE_NONAME)
	REGISTER_STRING(ATOM_KEYCODE_PA1)
	REGISTER_STRING(ATOM_KEYCODE_OEM_CLEAR)
	REGISTER_STRING(ATOM_NUM_KEYCODES)
	});

#endif